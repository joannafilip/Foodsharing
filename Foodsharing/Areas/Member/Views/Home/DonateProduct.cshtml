@model Foodsharing.Models.ProfilModel
@{
    ViewBag.Title = "DonateProduct";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>DonateProduct</h2>

<form class="form-wrapper" method="post">
    @Html.AntiForgeryToken()
    <input type="text" name="Nom" class="form-control" placeholder="Nom">
    @Html.ValidationMessageFor(model => model.DonateProduct.Nom, "", new { @class = "text-danger" })
    <input type="text" name="Description" class="form-control" placeholder="Description">
    @Html.ValidationMessageFor(model => model.DonateProduct.Description, "", new { @class = "text-danger" })
    <input type="text" name="Bio" class="form-control" placeholder="Bio">
    @Html.ValidationMessageFor(model => model.DonateProduct.Bio, "", new { @class = "text-danger" })
    <input type="date" name="DatePeremption" class="form-control" placeholder="Date peremption">
    @Html.ValidationMessageFor(model => model.DonateProduct.DatePeremption, "", new { @class = "text-danger" })
    <input type="date" name="DateFin" class="form-control" placeholder="Date fin">
    @Html.ValidationMessageFor(model => model.DonateProduct.DateFin, "", new { @class = "text-danger" })
    <input type="text" name="Etat" class="form-control" placeholder="Etat">
    @Html.ValidationMessageFor(model => model.DonateProduct.Etat, "", new { @class = "text-danger" })
    <input type="text" name="Photo" class="form-control" placeholder="Photo">
    @Html.ValidationMessageFor(model => model.DonateProduct.Photo, "", new { @class = "text-danger" })
    <input type="number" name="Etat" class="form-control" placeholder="Quantité">
    @Html.ValidationMessageFor(model => model.DonateProduct.Quantite, "", new { @class = "text-danger" })
    <input type="text" name="Type" class="form-control" placeholder="Type">
    @Html.ValidationMessageFor(model => model.DonateProduct.Type, "", new { @class = "text-danger" })
    <button type="submit" class="btn btn-primary">Send <i class="fa fa-envelope-open-o"></i></button>
</form>


        @*<div class="form-group">
            @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Etat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Etat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Etat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Bio)
                    @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DatePeremption, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatePeremption, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DatePeremption, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateFin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateFin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateFin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@
    <!--</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>-->
